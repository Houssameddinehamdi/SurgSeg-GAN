# model.yaml
#model yolo-gan-occ-handling 
nc: 12  # Number of classes
task: "segment"  # Task type
backbone:
  # Backbone layers for feature extraction
  - [-1, 1, Conv, [64, 3, 2]]  # Initial Conv Layer
  - [-1, 1, Conv, [128, 3, 2]] # Downsample Layer
  - [-1, 2, C3k2, [256, False, 0.25]] # C3k2 Block
  - [-1, 1, Conv, [256, 3, 2]] 
  - [-1, 2, C3k2, [512, False, 0.25]]
  - [-1, 1, Conv, [512, 3, 2]] 
  - [-1, 2, C3k2, [512, True]]
  - [-1, 1, Conv, [1024, 3, 2]] 
  - [-1, 2, C3k2, [1024, True]]
  - [-1, 1, SPPF, [1024, 5]] 
  - [-1, 2, C2PSA,[1024]] # New attention block

head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 6], 1, Concat]  # Concatenate features from backbone
  - [-1, 2, C3k2, [512, False]]
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 4], 1, Concat]
  - [-1, 2, C3k2, [256, False]]
  - [[-1, 13], 1, Concat]
  - [[16, 19, 22], 1, Detect, [nc]]  # Final detection layer
  - [[-1], 1, Conv, [nc, 1, 1]]      # Add mask prediction

# Occlusion handling components (to be integrated)
occlusion_mask_generator:
   type: CNN # Type of model for mask generation
   parameters: 
     input_channels: [3] # Number of input channels (e.g., RGB)
     output_channels: [1] # Output is a binary mask
     layers: 
       - type: ConvLayer
         filters: [32]
         kernel_size: [3]
         stride: [1]
         padding: [same]
       - type: ConvLayer
         filters: [64]
         kernel_size: [3]
         stride: [2]
         padding: [same]
       - type: ConvLayer
         filters: [128]
         kernel_size: [3]
         stride: [2]
         padding: [same]
       - type: FinalLayer
         activation: 'sigmoid' # For binary mask output

occlusion_aware_generator:
   type: GAN # Type of model for image generation
   parameters:
     input_channels: [4] # Original image + occlusion mask
     output_channels: [3] # Generated image channels (RGB)
     generator_layers:
       - type: ConvLayer
         filters: [64]
         kernel_size: [7]
         stride: [1]
         padding: [same]
       - type: ResBlock
         filters: [128]
       - type: ResBlock
         filters: [256]
       - type: UpsampleLayer
         scale_factor: [2] # Upsampling to original size
       - type: FinalLayer
         activation: 'tanh' # For image generation

discriminators:
   type: MultiDiscriminator # Type of discriminators to evaluate generated images
   parameters:
     num_discriminators: [2] # Number of discriminators to use
     discriminator_layers:
       - type: ConvLayer
         filters: [64]
         kernel_size: [4]
         stride: [2]
       - type: ConvLayer
         filters: [128]
         kernel_size: [4]
         stride: [2]
       - type: FinalLayer
         activation: 'sigmoid' # For binary classification (real vs fake)